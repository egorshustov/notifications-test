<resources>
    <string name="app_name">NotificationsTest</string>
    <string name="long_dummy_text">Another problem is that UI controllers frequently need to make asynchronous
        calls that may take some time to return. The UI controller needs to manage these calls and ensure the system
        cleans them up after it\'s destroyed to avoid potential memory leaks. This management requires a lot of
        maintenance, and in the case where the object is re-created for a configuration change, it\'s a waste of
        resources since the object may have to reissue calls it has already made. UI controllers such as activities
        and fragments are primarily intended to display UI data, react to user actions, or handle operating system
        communication, such as permission requests. Requiring UI controllers to also be responsible for loading data
        from a database or network adds bloat to the class. Assigning excessive responsibility to UI controllers can
        result in a single class that tries to handle all of an app\'s work by itself, instead of delegating work to
        other classes. Assigning excessive responsibility to the UI controllers in this way also makes testing a lot
        harder.</string>
</resources>
